version: '3.9'
services:
  frontend:
    build:
      context: ./pazaryeri-frontend/
      dockerfile: Dockerfile
    networks:
      - pazaryeri-network
    depends_on:
      - backend
    ports:
      - "81:81"
  
  backend:
    build:
      context: ./pazaryeri-backend/
      dockerfile: Dockerfile
    networks:
      - pazaryeri-network
    depends_on:
      - db
      - redis
    restart: on-failure
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CLOUDFLARE_R2_ACCESS_KEY_ID=${CLOUDFLARE_R2_ACCESS_KEY_ID}
      - CLOUDFLARE_R2_SECRET_ACCESS_KEY=${CLOUDFLARE_R2_SECRET_ACCESS_KEY}
      - CLOUDFLARE_R2_BUCKET_NAME=${CLOUDFLARE_R2_BUCKET_NAME}
      - CLOUDFLARE_R2_ENDPOINT=${CLOUDFLARE_R2_ENDPOINT}
      - CLOUDFLARE_R2_ACCOUNT_ID=${CLOUDFLARE_R2_ACCOUNT_ID}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - CORS_ORIGINS=http://localhost,http://localhost:81,http://frontend:81,https://pazaryeri.bekirberke.tr
    ports:
      - "3000:3000"

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - pazaryeri-network
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7.4.2-alpine
    command: sh -c 'redis-server /usr/local/etc/redis/redis.conf'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - pazaryeri-network
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro

volumes:
  db-data:
  redis-data:

networks:
  pazaryeri-network:
